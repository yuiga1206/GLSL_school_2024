/**
 * フラグメントシェーダのソースコードです。
 * フラグメントシェーダでは、冒頭に必ず「精度修飾子」の指定が必要です。
 * 精度修飾子には lowp, mediump, highp の３種類があります。
 * 精度修飾子では文字通り精度を指定しますが、これはあくまでも「この精度で処理し
 * てほしいと GPU に伝える」という意味しかありません。実際にどのような精度で処理
 * されるのかは、GPU と、GPU のドライバによって決まります。
 */
precision mediump float;
/**
 * 頂点シェーダと同様に、フラグメントシェーダでも必ず main 関数を定義します。
 * ここで main 関数に定義された処理が「頂点によって塗りつぶされるピクセル全て」
 * で実行されます。
 */


// varying vec3 viewPosition;


void main() {
  /**
   * フラグメントシェーダは、ピクセルをひとつひとつ塗りつぶしていくことが仕事
   * です。このとき、最終的に「該当するピクセルに何色を出力するか」は、以下に
   * 示すように gl_FragColor というビルトイン変数に vec4 型のデータを代入する
   * ことによって決まります。
   * 各値はそれぞれ 0.0 ～ 1.0 の範囲で指定します。
   * ここでは `vec4(1.0)` と記述していますが、これは `vec4(1.0, 1.0, 1.0, 1.0)`
   * と同じ意味として解釈されます。
   */
  // ★★ 何色にするか
  gl_FragColor = vec4(1.0);
  // ★★ 色が変わらなければキャッシュを消す
  // gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);
}

