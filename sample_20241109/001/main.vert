/**
 * 頂点シェーダのソースコードです。
 * ここではまず、最初に attribute 変数が宣言されています。
 * データ型は vec3 で、その変数の名前は "position" となっています。
 * この position には、JavaScript 側で生成・バインドした VBO 内のデータが転送さ
 * れてきます。
 */
attribute vec3 position;
/**
 * 以下にある main 関数が、シェーダ実行時のエントリポイントとなります。
 * 別の言い方をすると、この main 関数内に書かれた処理が、頂点のひとつひとつに対
 * して実行されます。
 * main 関数は別の名前に変更することはできず、必ず記述しなければなりません。この
 * ルールはフラグメントシェーダでも同様です。
 */
void main() {
  /**
   * 頂点シェーダは、頂点を変換するのが主な仕事です。
   * ここではわかりやすくする意味で一切変換を行っていませんが、将来的には行列
   * などが登場し、頂点を変換する処理を行ったりすることになります。
   * 以下にある gl_Position は、vec4 型のビルトイン変数で、いくつかある GLSL の
   * ビルトイン変数のなかの１つです。
   * この gl_Position へ代入した情報が、GPU の次のステージへの出力になります。
   * attribute 変数 position は vec3 型であるため、vec4 に変換してから代入して
   * います。（それ以外の変換は今回は一切していない）
   * わざわざ変換しているのは、GLSL は型が一致しないと代入できないためです。
   */
  gl_Position = vec4(position, 1.0);
  /**
   * gl_PointSize は、その変数名に `gl_` と付いていることからも想像できる通り
   * gl_Position と同じビルトインの変数です。
   * この変数には「頂点を点描するときの大きさ」を float 型で指定します。
   * float で指定する必要があるので `gl_PointSize = 1;` のように、int 型の数値
   * を代入できないことに注意します。
   */
  gl_PointSize = 16.0;
}

