


==========================================================================
==========================================================================
==========================================================================
 // ★★ 
 // ★★ 

@@@


全5回


 // ★★ 
 // ★★ 

@@@


=====================================
24/12/07 第3回
=====================================
---【前半：座学】---

シェーダアート
https://www.shadertoy.com/







---【後半：実習】---

---【012】---

今回のような場合、頂点シェーダでテクスチャ座標を求めることも可能。

00:57:00 くらい
数学のグラフを作るサイト：desmos.com


4つのピクセルしかない（あるいは4×4とか）、
小さいcanvasで考えるとわかりやすいかも。






---【013】---

混乱したら図に書いてみる。

3 は デスモスで見るとわかりやすいかも。

横に長くコードが書かれている場合は、括弧の中身を別の行に切り出すなど
して複数行で記述すると、文脈がより理解しやすくなるのでおすすめです



「abs(signedCoord.y)　を　signedCoord.y　にしたら上半分だけネオンになったのですが、これはどうなったということですか？」
→　lightness にマイナスの値が入るため。


【疑問】左下が細くなる？？





---【014】---

02:20:00 くらい
割った余りを使うことで、同じ条件を繰り返すことができる。


2次元座標を回転させたいときは行列を使う。
暗記…
「2次元　回転行列」で画像検索すれば出てくる。





---【015】---

デカルト座標：ヨコがx、タテがyで一点を指し示す
極座標：半径（距離）と角度で一点を指し示す
フォーマットが違うだけ。

極座標変換：
xを角度に、yを距離に代入する




---【016】---

スフィアトレーシングの図解
https://www.shadertoy.com/view/cdjGRt


3DCGを描く方法を大きく2つに分けたら、
ラスタライズ方式
レイトレーシング方式
の2つになる。


すごいレイマーチング
https://www.youtube.com/watch?v=8--5LwHRhjk



==============================
03:40:00 くらいをもう一回見る！！
main関数の解説の部分
==============================






---【017】---

ベクトルの内積の使い道はたくさんある。








---【018】---

レイマーチングは重い…
シンプルなものならいいが。




---【まとめ】---






------------------
【講義後の質問】
------------------

「まだよく理解できていないので今日の内容の範疇か分かりませんが、ライティングの色を指定することは可能ですか？」
→　可能です！017で説明。
2本のライトを使うことも可能。
three.js だとヘミスフィアライト。


「レイマーチングを学ぶのにお勧めの資料等はありますか？」
→　基本はIQさん。
Inigo quilez
のホームページ。